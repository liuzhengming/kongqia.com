---
layout: post
title: Creating & Styling Progress Bar With HTML5
date: 2016-01-15 07:21:12.000000000 +08:00
---

[HTML5](http://www.hongkiat.com/blog/tag/html5/) introduced the progress bar element, which allows us to show the progress of certain tasks, like uploads or downloads, basically anything that is in progress

<div class="et_social_media_wrapper">![](http://media02.hongkiat.com/html5-progress-bar/html5-progress-bar.jpg)<div class="et_social_media et_social_media_hidden et_social_mobile_on"></div></div>In this article, we will discuss how to add this element in the document, how to style it with CSS and animate the progress bar meter.

Let’s get started.

RECOMMENDED READING:[35 Beautiful Progress Bar Designs](http://www.hongkiat.com/blog/beautiful-progress-bars/)

### Basic Usage

The progress bar can be added with `<progress>`; the progress value is determined with the `value`, `min` and `max` attributes, as follows.

<div><div class="syntaxhighlighter  html" id="highlighter_889303"><table border="0" cellpadding="0" cellspacing="0"><tbody><tr><td class="gutter"><div class="line number1 index0 alt2">1</div></td><td class="code"><div class="container"><div class="line number1 index0 alt2">`<code class="html plain"><``<code class="html keyword">progress``<code class="html color1">value``<code class="html plain">=``<code class="html string">"10"``<code class="html color1">max``<code class="html plain">=``<code class="html string">"100"``<code class="html plain">></``<code class="html keyword">progress``<code class="html plain">>`</div></div></td></tr></tbody></table></div></div>Since this is a native progress bar, the presentation is vary dependent on the platform. Below is how a native progress bar looks in Windows and OSX.

<div class="et_social_media_wrapper">![](http://media02.hongkiat.com/html5-progress-bar/native-progress-bar.jpg)<div class="et_social_media et_social_media_hidden et_social_mobile_on"></div></div>Now, let’s try styling this progress bar, so it has a consistent or similar look across all platform.

### Styling Progress Bar

In the stylesheet, we actually can use the element selector to target and add style rules to `<progress>` element. In this example, we change the background color, remove the border line, and make it rounded by adding a border radius at half of its height.

<div><div class="syntaxhighlighter  css" id="highlighter_209574"><table border="0" cellpadding="0" cellspacing="0"><tbody><tr><td class="gutter"><div class="line number1 index0 alt2">1</div><div class="line number2 index1 alt1">2</div><div class="line number3 index2 alt2">3</div><div class="line number4 index3 alt1">4</div><div class="line number5 index4 alt2">5</div><div class="line number6 index5 alt1">6</div></td><td class="code"><div class="container"><div class="line number1 index0 alt2">`<code class="css plain">progress {`</div><div class="line number2 index1 alt1">`<code class="css spaces">    ``<code class="css keyword">background-color``<code class="css plain">: ``<code class="css value">#f3f3f3``<code class="css plain">;`</div><div class="line number3 index2 alt2">`<code class="css spaces">    ``<code class="css keyword">border``<code class="css plain">: ``<code class="css value">0``<code class="css plain">;`</div><div class="line number4 index3 alt1">`<code class="css spaces">    ``<code class="css keyword">height``<code class="css plain">: ``<code class="css value">18px``<code class="css plain">;`</div><div class="line number5 index4 alt2">`<code class="css spaces">    ``<code class="css plain">border-radius: ``<code class="css value">9px``<code class="css plain">;`</div><div class="line number6 index5 alt1">`<code class="css plain">}`</div></div></td></tr></tbody></table></div></div>However, each browser handles this a bit differently.

In Firefox, the styles affect the progress bar, while the progress meter / value is not affected.

In Chrome and Safari, it will remove the native styles and presentation from the platform and replace it with the [Webkit stylesheet](http://trac.webkit.org/browser/trunk/Source/WebCore/css/html.css), the styles above will not be applied (at least, at the moment).

So, we need some more workaround in these cases.

<div class="et_social_media_wrapper">![](http://media02.hongkiat.com/html5-progress-bar/progress-styles.jpg)<div class="et_social_media et_social_media_hidden et_social_mobile_on"></div></div>In Chrome and Safari, the progress element is translated this way.

<div><div class="syntaxhighlighter  html" id="highlighter_705972"><table border="0" cellpadding="0" cellspacing="0"><tbody><tr><td class="gutter"><div class="line number1 index0 alt2">1</div><div class="line number2 index1 alt1">2</div><div class="line number3 index2 alt2">3</div></td><td class="code"><div class="container"><div class="line number1 index0 alt2">`<code class="html plain"><``<code class="html keyword">progress``<code class="html plain">>`</div><div class="line number2 index1 alt1">`<code class="html spaces">    ``<code class="html plain">┗ <``<code class="html keyword">div``<code class="html plain">> ::-webkit-progress-bar`</div><div class="line number3 index2 alt2">`<code class="html spaces">         ``<code class="html plain">┗ <``<code class="html keyword">div``<code class="html plain">>::-webkit-progress-value`</div></div></td></tr></tbody></table></div></div>Thus, to change the progress bar and the progress value styles in these browsers, we need to add those Webkit `pseudo-classes`.

<div><div class="syntaxhighlighter  css" id="highlighter_366542"><table border="0" cellpadding="0" cellspacing="0"><tbody><tr><td class="gutter"><div class="line number1 index0 alt2">1</div><div class="line number2 index1 alt1">2</div><div class="line number3 index2 alt2">3</div><div class="line number4 index3 alt1">4</div><div class="line number5 index4 alt2">5</div><div class="line number6 index5 alt1">6</div></td><td class="code"><div class="container"><div class="line number1 index0 alt2">`<code class="css plain">progress::-webkit-progress-bar {`</div><div class="line number2 index1 alt1">`<code class="css spaces">    ``<code class="css comments">/* style rules */`</div><div class="line number3 index2 alt2">`<code class="css plain">}`</div><div class="line number4 index3 alt1">`<code class="css plain">progress::-webkit-progress-value {`</div><div class="line number5 index4 alt2">`<code class="css spaces">    ``<code class="css comments">/* style rules */`</div><div class="line number6 index5 alt1">`<code class="css plain">}`</div></div></td></tr></tbody></table></div></div>Firefox also has its special pseudo-class that is ::-moz-progress-bar. Unlike Chrome and Safari, this pseudo-class in Firefox refers to the progress meter/value.

<div><div class="syntaxhighlighter  css" id="highlighter_818390"><table border="0" cellpadding="0" cellspacing="0"><tbody><tr><td class="gutter"><div class="line number1 index0 alt2">1</div><div class="line number2 index1 alt1">2</div><div class="line number3 index2 alt2">3</div></td><td class="code"><div class="container"><div class="line number1 index0 alt2">`<code class="css plain">progress::-moz-progress-bar {`</div><div class="line number2 index1 alt1">`<code class="css spaces">    ``<code class="css comments">/* style rules */`</div><div class="line number3 index2 alt2">`<code class="css plain">}`</div></div></td></tr></tbody></table></div></div>To conclude, these are currently the entire selectors for styling HTML5 progress bar.

<div><div class="syntaxhighlighter  css" id="highlighter_971580"><table border="0" cellpadding="0" cellspacing="0"><tbody><tr><td class="gutter"><div class="line number1 index0 alt2">1</div><div class="line number2 index1 alt1">2</div><div class="line number3 index2 alt2">3</div><div class="line number4 index3 alt1">4</div><div class="line number5 index4 alt2">5</div><div class="line number6 index5 alt1">6</div><div class="line number7 index6 alt2">7</div><div class="line number8 index7 alt1">8</div><div class="line number9 index8 alt2">9</div><div class="line number10 index9 alt1">10</div><div class="line number11 index10 alt2">11</div><div class="line number12 index11 alt1">12</div></td><td class="code"><div class="container"><div class="line number1 index0 alt2">`<code class="css plain">progress {`</div><div class="line number2 index1 alt1">`<code class="css spaces">    ``<code class="css comments">/* style rules */`</div><div class="line number3 index2 alt2">`<code class="css plain">}`</div><div class="line number4 index3 alt1">`<code class="css plain">progress::-webkit-progress-bar {`</div><div class="line number5 index4 alt2">`<code class="css spaces">    ``<code class="css comments">/* style rules */`</div><div class="line number6 index5 alt1">`<code class="css plain">}`</div><div class="line number7 index6 alt2">`<code class="css plain">progress::-webkit-progress-value {`</div><div class="line number8 index7 alt1">`<code class="css spaces">    ``<code class="css comments">/* style rules */`</div><div class="line number9 index8 alt2">`<code class="css plain">}`</div><div class="line number10 index9 alt1">`<code class="css plain">progress::-moz-progress-bar {`</div><div class="line number11 index10 alt2">`<code class="css spaces">    ``<code class="css comments">/* style rules */`</div><div class="line number12 index11 alt1">`<code class="css plain">}`</div></div></td></tr></tbody></table></div></div>### Animate the Progress

Next, we will see how to animate the progress bar. Typically, the progress bar expands from left to right as the task progresses.

The idea is, the progress bar will expand from `0` and stop once it reaches the maximum value. We will also display the value number as it is progressing. Below is the HTML structure.

HTML

<div><div class="syntaxhighlighter  html" id="highlighter_404039"><table border="0" cellpadding="0" cellspacing="0"><tbody><tr><td class="gutter"><div class="line number1 index0 alt2">1</div></td><td class="code"><div class="container"><div class="line number1 index0 alt2">`<code class="html plain"><``<code class="html keyword">progress``<code class="html color1">id``<code class="html plain">=``<code class="html string">"progressbar"``<code class="html color1">value``<code class="html plain">=``<code class="html string">"0"``<code class="html color1">max``<code class="html plain">=``<code class="html string">"100"``<code class="html plain">></``<code class="html keyword">progress``<code class="html plain">>`</div></div></td></tr></tbody></table></div></div>CSS

In this example, we will use jQuery to animate the progress bar. So, we should also not forget to insert the jQuery, like so.

<div><div class="syntaxhighlighter  html" id="highlighter_431147"><table border="0" cellpadding="0" cellspacing="0"><tbody><tr><td class="gutter"><div class="line number1 index0 alt2">1</div></td><td class="code"><div class="container"><div class="line number1 index0 alt2">`<code class="html plain"><``<code class="html keyword">script``<code class="html color1">src``<code class="html plain">=``<code class="html string">"js/jquery.js"``<code class="html color1">type``<code class="html plain">=``<code class="html string">"text/javascript"``<code class="html plain">></``<code class="html keyword">script``<code class="html plain">>`</div></div></td></tr></tbody></table></div></div>Then, we add the scripts to make the progress bar expand. First, we store the progress bar element, the progressbar value as well the maximum value, and the timeframe, in Variables.

<div><div class="syntaxhighlighter  js" id="highlighter_387730"><table border="0" cellpadding="0" cellspacing="0"><tbody><tr><td class="gutter"><div class="line number1 index0 alt2">1</div><div class="line number2 index1 alt1">2</div><div class="line number3 index2 alt2">3</div><div class="line number4 index3 alt1">4</div></td><td class="code"><div class="container"><div class="line number1 index0 alt2">`<code class="js keyword">var``<code class="js plain">progressbar = $(``<code class="js string">'#progressbar'``<code class="js plain">),`</div><div class="line number2 index1 alt1">`<code class="js spaces">    ``<code class="js plain">max = progressbar.attr(``<code class="js string">'max'``<code class="js plain">),`</div><div class="line number3 index2 alt2">`<code class="js spaces">    ``<code class="js plain">value = progressbar.val(),`</div><div class="line number4 index3 alt1">`<code class="js spaces">    ``<code class="js plain">time = (1000/max)*5;`</div></div></td></tr></tbody></table></div></div>Next, we create a variable that store the animation function. In this example, we call the variable `loading`.

<div><div class="syntaxhighlighter  js" id="highlighter_420967"><table border="0" cellpadding="0" cellspacing="0"><tbody><tr><td class="gutter"><div class="line number1 index0 alt2">1</div><div class="line number2 index1 alt1">2</div><div class="line number3 index2 alt2">3</div></td><td class="code"><div class="container"><div class="line number1 index0 alt2">`<code class="js keyword">var``<code class="js plain">loading = ``<code class="js keyword">function``<code class="js plain">() {`</div><div class="line number2 index1 alt1"></div><div class="line number3 index2 alt2">`<code class="js plain">}`</div></div></td></tr></tbody></table></div></div>Inside the above function, we set the progress interval. We will increase the value by `1` per timeframe — you can increase the value to make the progress run faster.

<div><div class="syntaxhighlighter  js" id="highlighter_62439"><table border="0" cellpadding="0" cellspacing="0"><tbody><tr><td class="gutter"><div class="line number1 index0 alt2">1</div></td><td class="code"><div class="container"><div class="line number1 index0 alt2">`<code class="js plain">value += 1;`</div></div></td></tr></tbody></table></div></div>And then, we add the result to the progress bar.

<div><div class="syntaxhighlighter  js" id="highlighter_642527"><table border="0" cellpadding="0" cellspacing="0"><tbody><tr><td class="gutter"><div class="line number1 index0 alt2">1</div></td><td class="code"><div class="container"><div class="line number1 index0 alt2">`<code class="js plain">addValue = progressbar.val(value);`</div></div></td></tr></tbody></table></div></div>We also show the value inside, next to the progress bar.

<div><div class="syntaxhighlighter  js" id="highlighter_928617"><table border="0" cellpadding="0" cellspacing="0"><tbody><tr><td class="gutter"><div class="line number1 index0 alt2">1</div></td><td class="code"><div class="container"><div class="line number1 index0 alt2">`<code class="js plain">$(``<code class="js string">'.progress-value'``<code class="js plain">).html(value + ``<code class="js string">'%'``<code class="js plain">);`</div></div></td></tr></tbody></table></div></div>Next, we create a new function to run the animation function.

<div><div class="syntaxhighlighter  js" id="highlighter_82947"><table border="0" cellpadding="0" cellspacing="0"><tbody><tr><td class="gutter"><div class="line number1 index0 alt2">1</div><div class="line number2 index1 alt1">2</div><div class="line number3 index2 alt2">3</div></td><td class="code"><div class="container"><div class="line number1 index0 alt2">`<code class="js plain">setInterval(``<code class="js keyword">function``<code class="js plain">() {`</div><div class="line number2 index1 alt1">`<code class="js spaces">    ``<code class="js plain">loading();`</div><div class="line number3 index2 alt2">`<code class="js plain">}, time);`</div></div></td></tr></tbody></table></div></div>At this point, the animation is already functioning. However, the value will keep increasing infinitely. So, we need to create a conditional statement for the animation to stop when it reaches its maximum value.

First, let’s store the above function in a variable like so.

<div><div class="syntaxhighlighter  js" id="highlighter_323306"><table border="0" cellpadding="0" cellspacing="0"><tbody><tr><td class="gutter"><div class="line number1 index0 alt2">1</div><div class="line number2 index1 alt1">2</div><div class="line number3 index2 alt2">3</div></td><td class="code"><div class="container"><div class="line number1 index0 alt2">`<code class="js keyword">var``<code class="js plain">animate = setInterval(``<code class="js keyword">function``<code class="js plain">() {`</div><div class="line number2 index1 alt1">`<code class="js spaces">    ``<code class="js plain">loading();`</div><div class="line number3 index2 alt2">`<code class="js plain">}, time);`</div></div></td></tr></tbody></table></div></div>And, inside the `loading` variable, we add the conditional statement, as follow.

<div><div class="syntaxhighlighter  js" id="highlighter_829722"><table border="0" cellpadding="0" cellspacing="0"><tbody><tr><td class="gutter"><div class="line number1 index0 alt2">1</div><div class="line number2 index1 alt1">2</div><div class="line number3 index2 alt2">3</div></td><td class="code"><div class="container"><div class="line number1 index0 alt2">`<code class="js keyword">if``<code class="js plain">(value == max) {`</div><div class="line number2 index1 alt1">`<code class="js spaces">    ``<code class="js plain">clearInterval(animate);`</div><div class="line number3 index2 alt2">`<code class="js plain">}`</div></div></td></tr></tbody></table></div></div>The above script states that once the value is equal to the maximum value, clear the interval, which will stop the animation function.

That’s it and here are all the codes to animate the progress bar.

<div><div class="syntaxhighlighter  js" id="highlighter_111677"><table border="0" cellpadding="0" cellspacing="0"><tbody><tr><td class="gutter"><div class="line number1 index0 alt2">1</div><div class="line number2 index1 alt1">2</div><div class="line number3 index2 alt2">3</div><div class="line number4 index3 alt1">4</div><div class="line number5 index4 alt2">5</div><div class="line number6 index5 alt1">6</div><div class="line number7 index6 alt2">7</div><div class="line number8 index7 alt1">8</div><div class="line number9 index8 alt2">9</div><div class="line number10 index9 alt1">10</div><div class="line number11 index10 alt2">11</div><div class="line number12 index11 alt1">12</div><div class="line number13 index12 alt2">13</div><div class="line number14 index13 alt1">14</div><div class="line number15 index14 alt2">15</div><div class="line number16 index15 alt1">16</div><div class="line number17 index16 alt2">17</div><div class="line number18 index17 alt1">18</div><div class="line number19 index18 alt2">19</div><div class="line number20 index19 alt1">20</div><div class="line number21 index20 alt2">21</div></td><td class="code"><div class="container"><div class="line number1 index0 alt2">`<code class="js plain">$(document).ready(``<code class="js keyword">function``<code class="js plain">() {`</div><div class="line number2 index1 alt1">`<code class="js spaces">    ``<code class="js keyword">var``<code class="js plain">progressbar = $(``<code class="js string">'#progressbar'``<code class="js plain">),`</div><div class="line number3 index2 alt2">`<code class="js spaces">        ``<code class="js plain">max = progressbar.attr(``<code class="js string">'max'``<code class="js plain">),`</div><div class="line number4 index3 alt1">`<code class="js spaces">        ``<code class="js plain">time = (1000/max)*5,    `</div><div class="line number5 index4 alt2">`<code class="js spaces">        ``<code class="js plain">value = progressbar.val();`</div><div class="line number6 index5 alt1"></div><div class="line number7 index6 alt2">`<code class="js spaces">    ``<code class="js keyword">var``<code class="js plain">loading = ``<code class="js keyword">function``<code class="js plain">() {`</div><div class="line number8 index7 alt1">`<code class="js spaces">        ``<code class="js plain">value += 1;`</div><div class="line number9 index8 alt2">`<code class="js spaces">        ``<code class="js plain">addValue = progressbar.val(value);`</div><div class="line number10 index9 alt1">`<code class="js spaces">        `</div><div class="line number11 index10 alt2">`<code class="js spaces">        ``<code class="js plain">$(``<code class="js string">'.progress-value'``<code class="js plain">).html(value + ``<code class="js string">'%'``<code class="js plain">);`</div><div class="line number12 index11 alt1"></div><div class="line number13 index12 alt2">`<code class="js spaces">        ``<code class="js keyword">if``<code class="js plain">(value == max) {`</div><div class="line number14 index13 alt1">`<code class="js spaces">            ``<code class="js plain">clearInterval(animate);                    `</div><div class="line number15 index14 alt2">`<code class="js spaces">        ``<code class="js plain">}`</div><div class="line number16 index15 alt1">`<code class="js spaces">    ``<code class="js plain">};`</div><div class="line number17 index16 alt2"></div><div class="line number18 index17 alt1">`<code class="js spaces">    ``<code class="js keyword">var``<code class="js plain">animate = setInterval(``<code class="js keyword">function``<code class="js plain">() {`</div><div class="line number19 index18 alt2">`<code class="js spaces">        ``<code class="js plain">loading();`</div><div class="line number20 index19 alt1">`<code class="js spaces">    ``<code class="js plain">}, time);`</div><div class="line number21 index20 alt2">`<code class="js plain">};`</div></div></td></tr></tbody></table></div></div>You can view the demo and download the source from the following links.

- [View Demo](http://demo.hongkiat.com/html5-progress-bar/)
- [Download Source](http://demo.hongkiat.com/html5-progress-bar/source.zip)

### Browser Support

According to [CanIUse.com](http://caniuse.com/#feat=progressmeter), HTML5 progress element is fully supported in the following browsers: Firefox 16+, Chrome 8+, Safari 6+ and Opera 11+.

<div class="et_social_media_wrapper">![](http://media02.hongkiat.com/html5-progress-bar/browser-support.jpg)<div class="et_social_media et_social_media_hidden et_social_mobile_on"></div></div>[Lea Verou provides polyfills](http://lea.verou.me/2011/07/a-polyfill-for-html5-progress-element-the-obsessive-perfectionist-way/) to replicate similar functionality of this element in unsupported browsers though.

### Furher References

Below are a few good references to dig into this element further.

- [Cross Browser HTML5 Progress Bar in Depth](http://www.useragentman.com/blog/2012/01/03/cross-browser-html5-progress-bars-in-depth/) – User Agent Man
- [HTML5 file upload with progress](http://www.matlus.com/html5-file-upload-with-progress/) – FileZilla Project
- [HTML5 Progress Documentation](http://www.w3.org/html/wg/drafts/html/master/single-page.html#the-progress-element) – W3.org

未经允许不得转载：[空洽网](http://kongqia.com) » [Creating & Styling Progress Bar With HTML5](http://kongqia.com/33671.html)


